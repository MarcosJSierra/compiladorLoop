/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kurokitsune.main;

import java.io.File;
import java.io.FileNotFoundException;
import javax.swing.*;
import java.io.FileReader;
import java.io.BufferedInputStream;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import informacion.*;
/**
 *
 * @author marcos
 */
public class cargar_archivo extends javax.swing.JPanel {
    
    private File archivo;
    public static String direccionArchivo;
    public static File archivoToken;
    public static PrintWriter salida;
    public static int posicion;
    public static String pathArchivo;
    public static String nombreArchivo; 
    private JOptionPane mensaje;
    /**
     * Creates new form cargar_archivo
     */
    public cargar_archivo() {
        initComponents();
        this.setVisible(true);
        TextoArchivo.setEditable(false);
        jButton2.setEnabled(false);
        this.setSize(900,625);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        notificaciones = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextoArchivo = new javax.swing.JTextArea();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        notificaciones.setColumns(20);
        notificaciones.setRows(5);
        jScrollPane2.setViewportView(notificaciones);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 870, 150));

        jButton1.setText("Cargar Archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 160, 40));

        jButton2.setText("Compilar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 160, 40));

        jLabel1.setText("Ruta: ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 640, -1));

        jLabel2.setText("Notificaciones:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        TextoArchivo.setColumns(20);
        TextoArchivo.setRows(5);
        jScrollPane1.setViewportView(TextoArchivo);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 650, 320));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser selector = new JFileChooser("/home");
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("loop", "Loop", "LOOP");
       
        selector.setFileFilter(filtro);
        int respuesta = selector.showOpenDialog(this);
        if(respuesta == JFileChooser.APPROVE_OPTION){
            
            notificaciones = new javax.swing.JTextArea();
            notificaciones.setColumns(20);
            notificaciones.setRows(5);
            jScrollPane2.setViewportView(notificaciones);
            cargar_archivo.posicion = 0;
            TextoArchivo = new javax.swing.JTextArea();
            TextoArchivo.setColumns(20);
            TextoArchivo.setRows(5);
            jScrollPane1.setViewportView(TextoArchivo);
            jScrollPane2.setViewportView(notificaciones);
            TextoArchivo.setEditable(false);
            String elemento;
            archivo = selector.getSelectedFile();
            if(archivo != null){

                direccionArchivo = archivo.getParent();
                pathArchivo = archivo.getAbsolutePath();
                nombreArchivo = archivo.getName();
                
                jLabel1.setText("Ruta: " + archivo.getAbsolutePath());
                try{
                    int pos = 0;
                    String textoinsertar;
                    FileReader contenido = new FileReader(archivo);
                    BufferedReader lee = new BufferedReader(contenido);
                    while((elemento = lee.readLine())!=null){
          
                        textoinsertar = elemento + "\n";
                        TextoArchivo.insert(textoinsertar, pos);
                        pos = pos + textoinsertar.length();
                    }
                    TextoArchivo.setSize(220, 85);
                    jButton2.setEnabled(true);
                }catch (FileNotFoundException ex) {
                    Logger.getLogger(cargar_archivo.class.getName()).log(Level.SEVERE, null, ex);
                }catch (IOException ex){

                }
            }
        }else{
            JOptionPane.showMessageDialog(null,"No se selecciono ningun archivo","NOTIFICACION!!",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        notificaciones = new javax.swing.JTextArea();
        notificaciones.setColumns(20);
        notificaciones.setRows(5);
        jScrollPane2.setViewportView(notificaciones);
        cargar_archivo.posicion = 0;
        token.contadorGlobal = 0;
        token.contadorLocal = 0;
        archivoToken  = new File(cargar_archivo.pathArchivo+".tokens");
        cargar_archivo.escribirNotificacion("Iniciando Compilacion de archivo " + this.pathArchivo+"\n",0);
        try{
            cargar_archivo.salida = new PrintWriter(new FileWriter(archivoToken));
            cargar_archivo.this.escribirNotificacion("Iniciando escritura archivo " + this.pathArchivo + ".\n",0);
            AnalizadorLexico lex = new AnalizadorLexico(new FileReader(pathArchivo)); 
            //BufferedReader buffer = new BufferedReader(new FileReader(pathArchivo));
            //AnalizadorLexico lex = new AnalizadorLexico(buffer);
            lex.yylex();
            //aqui va el codigo de jcup
            
            
            cargar_archivo.salida.close();
            cargar_archivo.escribirNotificacion("Finalizando Escritura de archivo " + this.pathArchivo+".tokens\n",0 );
            cargar_archivo.escribirNotificacion("Finalizando Compilacion de archivo " + this.pathArchivo+"\n",0 );
        } catch(java.lang.Exception el){
            
        }finally{
            
        } 
    }//GEN-LAST:event_jButton2ActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TextoArchivo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextArea notificaciones;
    // End of variables declaration//GEN-END:variables
    public static void escribirNotificacion(String mensaje, int tipo){
       if(tipo==1)
       notificaciones.insert(mensaje, cargar_archivo.posicion);
       else
       notificaciones.insert(mensaje, cargar_archivo.posicion);
       
       cargar_archivo.posicion += mensaje.length();
    }
    public static void escribirToken(String cadena){
            cargar_archivo.salida.println(cadena);
    }
   
}
